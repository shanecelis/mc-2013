#!/usr/bin/env guile \
-e debug-main -s 
!#
(use-modules (experiment)
             (oop goops)
             (experiment-transition)
             (system repl error-handling)
             (optimize-transition))

(define (main args)
  (let ((argc (length args))
        (exp #f)
        (exps #f))
    (when (= 1 argc)
      (format #t "Usage: ~a <filename ...>~%" (car args))
      (exit 2))
    ;(format #t "reading ~a~%" filename)
    (set! exps (map (lambda (filename) 
                      ;(format #t "reading ~a~%" filename)
                      (read-experiment filename)) (cdr args)))

    ;(format #t "END READING~%")
    (set! exp (make <experiment-transition-parent>
              #:child-experiments
              exps))

    (export-data exp (current-output-port))))

(define (debug-main args)
  (call-with-error-handling
   (lambda ()
     (main args))))
